# Configuración de red personalizada con mejor seguridad
networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_NETWORK_SUBNET:-172.25.0.0/16}
    # Configuración adicional de seguridad de red
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"

# Configuración de volúmenes con mejor seguridad
volumes:
  mongo_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mongodb

services:
  # Base de datos MongoDB para desarrollo
  mongodb_meli_db:
    image: mongo:6
    container_name: mongodb_meli_db
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-analysis_service}
    volumes:
      - mongo_data:/data/db
      # Configuración de MongoDB para desarrollo
      - ./config/mongod.conf:/etc/mongod.conf:ro
    networks:
      custom_net:
        ipv4_address: 172.25.0.2
    command: ["mongod", "--config", "/etc/mongod.conf"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Servicio de configuración
  config-service:
    container_name: config-service-container
    build:
      context: ./config-service
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${CONFIG_SERVICE_NODE_ENV:-production}
    ports:
      - "${CONFIG_SERVICE_PORT:-8000}:8000"
    environment:
      - NODE_ENV=${CONFIG_SERVICE_NODE_ENV:-production}
      - PORT=${CONFIG_SERVICE_PORT:-8000}
      - FILE_DEFAULT_ENCODING=${CONFIG_SERVICE_FILE_ENCODING:-utf8}
      - ENCRYPTION_KEY=${CONFIG_SERVICE_ENCRYPTION_KEY:-mi_contraseña_secreta_super_segura_2024}
      - AUTH_SERVICE_URL=${INTERNAL_AUTH_SERVICE_URL:-http://auth-service:8080}
      - MONGO_HOST=mongodb_meli_db
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_DATABASE=${MONGO_DATABASE:-analysis_service}
    depends_on:
      mongodb_meli_db:
        condition: service_healthy
    networks:
      custom_net:
        ipv4_address: 172.25.0.3
    restart: ${RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--method=GET", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Servicio de autenticación
  auth-service:
    container_name: auth-service-container
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT:-8080}:8080"
    environment:
      - PORT=${AUTH_SERVICE_PORT:-8080}
      - MONGO_URI=mongodb://mongodb_meli_db:${MONGO_PORT:-27017}/${AUTH_SERVICE_DATABASE:-auth_service}
      - MONGO_DATABASE=${AUTH_SERVICE_DATABASE:-auth_service}
    networks:
      custom_net:
        ipv4_address: 172.25.0.4
    restart: ${RESTART_POLICY:-unless-stopped}
    depends_on:
      mongodb_meli_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--method=GET", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Servicio de análisis
  analysis-service:
    container_name: analysis-service-container
    build:
      context: ./analysis-service
      dockerfile: Dockerfile
    ports:
      - "${ANALYSIS_SERVICE_PORT:-8002}:8002"
    environment:
      - PORT=${ANALYSIS_SERVICE_PORT:-8002}
      - AUTH_SERVICE_URL=${INTERNAL_AUTH_SERVICE_URL:-http://auth-service:8080}
      - CONFIG_SERVICE_URL=${INTERNAL_CONFIG_SERVICE_URL:-http://config-service:8000}
      - ENCRYPTION_KEY=${ANALYSIS_SERVICE_ENCRYPTION_KEY:-mi_contraseña_secreta_super_segura_2024}
      - LOG_LEVEL=${ANALYSIS_SERVICE_LOG_LEVEL:-INFO}
      - GEMINI_API_KEY=${ANALYSIS_SERVICE_GEMINI_API_KEY:-AIzaSyBw1lahxUngAHg8jHn2XvfHE-d9JUpnAp4}
      - MONGO_HOST=mongodb_meli_db
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_DATABASE=${MONGO_DATABASE:-analysis_service}
    depends_on:
      auth-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    networks:
      custom_net:
        ipv4_address: 172.25.0.5
    restart: ${RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--method=GET", "http://localhost:8002/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
