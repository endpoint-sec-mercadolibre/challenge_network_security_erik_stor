networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

services:
  mongodb_meli_db:
    image: mongo:6
    container_name: mongodb_meli_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      custom_net:
        ipv4_address: 172.25.0.4

  config-service:
    container_name: config-service-container
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      # TODO: DESCOMENTAR ESTO: - "8000"
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - FILE_DEFAULT_ENCODING=utf8
      - ENCRYPTION_KEY=your-secure-encryption-key-32-chars
      - MONGODB_CONNECTION_STRING=mongodb://mongodb_meli_db:27017/config-service
    depends_on:
      - mongodb_meli_db
    networks:
      custom_net:
        ipv4_address: 172.25.0.3
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  auth-service:
    container_name: auth-service-container
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    networks:
      custom_net:
        ipv4_address: 172.25.0.5
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  analysis-service:
    container_name: analysis-service-container
    build:
      context: ./analysis-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - AUTH_SERVICE_URL=http://auth-service:8080
      - ENCRYPTION_KEY=your-secure-encryption-key-32-chars
      - LOG_LEVEL=INFO
    depends_on:
      - auth-service
    networks:
      custom_net:
        ipv4_address: 172.25.0.2
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongo_data:
